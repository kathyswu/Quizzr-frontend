@use "../../variables" as v;

@import url("https://fonts.googleapis.com/css2?family=Poppins:wght@900&display=swap");

// Main container of page
.home {
  height: calc(100vh - 80px);
  padding: 0;
  margin: 0 auto;
  -webkit-font-smoothing: antialiased;
}

// Container of banner element
.banner {
  font-family: "Poppins", sans-serif;
  margin: 0 auto;
  display: grid;
  grid-template-columns: auto;
  grid-template-rows: 60% 20%;
  justify-content: center;
  align-items: center;
  background: linear-gradient(to right, #0f0c29, #302b63, #24243e);
  width: 80%;
  border-radius: 10px;
}

// Gradient Border by @alphardex on CodePen
// gradient: https://www.gradientmagic.com/collection/rainbowstandard
.gradient_border {
  --border-width: 4px;

  position: relative;
  width: 80%;
  height: 90%;
  font-size: 2.5rem;
  color: v.$text;
  background-color: darken(v.$base, 5%);
  box-shadow: -1px -1px 4px rgba(255, 255, 255, 0.05),
    4px 4px 6px rgba(0, 0, 0, 0.2),
    inset -1px -1px 4px rgba(255, 255, 255, 0.05),
    inset 1px 1px 1px rgba(0, 0, 0, 0.1);
  border-radius: 10px;

  &::after {
    position: absolute;
    content: "";
    top: calc(-1 * var(--border-width));
    left: calc(-1 * var(--border-width));
    z-index: -1;
    width: calc(100% + var(--border-width) * 2);
    height: calc(100% + var(--border-width) * 2);
    background: linear-gradient(
      60deg,
      hsl(224, 85%, 66%),
      hsl(269, 85%, 66%),
      hsl(314, 85%, 66%),
      hsl(359, 85%, 66%),
      hsl(44, 85%, 66%),
      hsl(89, 85%, 66%),
      hsl(134, 85%, 66%),
      hsl(179, 85%, 66%)
    );
    background-size: 300% 300%;
    background-position: 0 50%;
    border-radius: calc(2 * var(--border-width));
    animation: moveGradient 4s alternate infinite;
  }
}

@keyframes moveGradient {
  50% {
    background-position: 100% 50%;
  }
}

// Glowing Box Effect by @prathkum on CodePen for banner element
.banner_ul {
  position: relative;
  display: flex;

  li {
    list-style: none;
  }

  input[type="checkbox"] {
    position: absolute;
    opacity: 0;
    cursor: pointer;
    height: 160px;
    width: 160px;
    z-index: 100;
    margin-left: -75px;
  }

  div {
    position: relative;
    height: 160px;
    width: 160px;
    background: #18191f;
    color: #555;
    display: flex;
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 120px;
    cursor: pointer;
    margin: 0 4px;
    border-radius: 20px;
    box-shadow: -1px -1px 4px rgba(255, 255, 255, 0.05),
      4px 4px 6px rgba(0, 0, 0, 0.2),
      inset -1px -1px 4px rgba(255, 255, 255, 0.05),
      inset 1px 1px 1px rgba(0, 0, 0, 0.1);
  }

  input[type="checkbox"]:checked ~ div {
    box-shadow: inset 0 0 2px rgba(255, 255, 255, 0.05),
      inset 4px 4px 6px rgba(0, 0, 0, 0.2);
    color: yellow;
    text-shadow: 0 0 15px yellow, 0 0 25px yellow;
    animation: glow 1.5s linear infinite;
  }

  @keyframes glow {
    0% {
      filter: hue-rotate(0deg);
    }
    100% {
      filter: hue-rotate(360deg);
    }
  }
}

// Play now text
// CSS Neon Sign Effect by @ananyaneogi on CodePen
@import url("https://fonts.googleapis.com/css?family=Sacramento&display=swap");

.menu {
  a {
    text-decoration: none;
  }

  h2 {
    font-size: 110px;
    line-height: calc(20px + 18vh);
    text-shadow: 0 0 5px rgb(63, 63, 63), 0 0 15px rgb(63, 63, 63),
      0 0 25px rgb(63, 63, 63), 0 0 20px rgb(63, 63, 63),
      0 0 30px rgb(44, 44, 44), 0 0 80px rgb(44, 44, 44),
      0 0 80px rgb(44, 44, 44);
    color: rgb(109, 109, 109);
    font-family: "Sacramento", cursive;
    text-align: center;
    width: 40%;
    margin: 0 auto;
    transition: 0.3s ease-out;
    cursor: pointer;
  }

  h2:hover {
    font-size: 115px;
    line-height: calc(20px + 18vh);
    text-shadow: 0 0 5px rgb(209, 161, 2), 0 0 15px rgb(209, 161, 2),
      0 0 25px rgb(209, 161, 2), 0 0 20px rgb(209, 161, 2),
      0 0 30px rgb(44, 44, 44), 0 0 80px rgb(44, 44, 44),
      0 0 80px rgb(44, 44, 44);
    color: #fff6a9;
    font-family: "Sacramento", cursive;
    text-align: center;
    animation: blink 6s infinite;
    -webkit-animation: blink 6s infinite;
    width: 40%;
    margin: 0 auto;
  }

  @-webkit-keyframes blink {
    20%,
    24%,
    55% {
      color: #111;
      text-shadow: none;
    }

    0%,
    19%,
    21%,
    23%,
    25%,
    54%,
    56%,
    100% {
      text-shadow: 0 0 5px rgb(209, 161, 2), 0 0 15px rgb(209, 161, 2),
        0 0 25px rgb(209, 161, 2), 0 0 20px rgb(209, 161, 2),
        0 0 30px rgb(44, 44, 44), 0 0 80px rgb(44, 44, 44),
        0 0 80px rgb(44, 44, 44);
      color: #fff6a9;
    }
  }

  @keyframes blink {
    20%,
    24%,
    55% {
      color: #111;
      text-shadow: none;
    }

    0%,
    19%,
    21%,
    23%,
    25%,
    54%,
    56%,
    100% {
      text-shadow: 0 0 5px rgb(209, 161, 2), 0 0 15px rgb(209, 161, 2),
        0 0 25px rgb(209, 161, 2), 0 0 20px rgb(209, 161, 2),
        0 0 30px rgb(44, 44, 44), 0 0 80px rgb(44, 44, 44),
        0 0 80px rgb(44, 44, 44);
      color: #fff6a9;
    }
  }
}

/* Bokeh Effect by Louis Hoebregts 
  @Mamboleoo on CodePen */
.background {
  max-width: 90%;
  max-height: 90%;
  overflow: hidden;
}
$particleSize: 20vmin;
$animationDuration: 6s;
$amount: 40;
.background span {
  width: $particleSize;
  height: $particleSize;
  border-radius: $particleSize;
  backface-visibility: hidden;
  position: absolute;
  animation-name: move;
  animation-duration: $animationDuration;
  animation-timing-function: linear;
  animation-iteration-count: infinite;
  z-index: -10;
  $colors: (#e7a82183, #e45a84, #ffacac, #4e42b986);
  @for $i from 1 through $amount {
    &:nth-child(#{$i}) {
      color: nth($colors, random(length($colors)));
      top: random(100) * 1%;
      left: random(100) * 1%;
      animation-duration: (random($animationDuration * 10) / 10) * 1s + 10s;
      animation-delay: random(($animationDuration + 10s) * 10) / 10 * -1s;
      transform-origin: (random(50) - 25) * 1vw (random(50) - 25) * 1vh;
      $blurRadius: (random() + 0.5) * $particleSize * 0.5;
      $x: if(random() > 0.5, -1, 1);
      box-shadow: ($particleSize * 2 * $x) 0 $blurRadius currentColor;
    }
  }
}

@keyframes move {
  100% {
    transform: translate3d(0, 0, 1px) rotate(360deg);
  }
}
